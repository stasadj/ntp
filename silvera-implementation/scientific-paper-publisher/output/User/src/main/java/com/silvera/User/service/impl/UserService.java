/**
    Use this file to implement business logic. This file will be preserved
    during next compilations.

    Generated by: silvera
    Date: 2022-05-18 16:27:59
*/

package com.silvera.User.service.impl;

import java.util.Optional;
import org.springframework.stereotype.Service;
import com.silvera.User.domain.model.*;
import com.silvera.User.repository.*;
import com.silvera.User.service.base.*;

import org.springframework.beans.factory.annotation.Autowired;





@Service
public class UserService implements IUserService {

    

    
    
    @Autowired
    UserRepository userRepository;
    

    public UserService(){
        super();
    }

    // Auto-generated CRUD methods
    
    
    @Override
    public User createUser(User user){
        userRepository.save(user);
        Optional<User> opt = userRepository.findById(user.getId());
        return opt.orElse(null);
    }

    @Override
    public User updateUser(java.lang.String id, User userUpdate){
        User entity = this.readUser(id);
        userRepository.save(userUpdate);
        return userUpdate;
    }

    @Override
    public User readUser(java.lang.String id){
        Optional<User> opt = userRepository.findById(id);
        return opt.orElse(null);
    }

    @Override
    public void deleteUser(java.lang.String id){
        User entity = readUser(id);
        userRepository.delete(entity);
    }
    

    
    
    
    @Override
    public java.lang.String logIn(LoginInfo loginInfo){
        User user = userRepository.findByUsernameAndPassword(loginInfo.getUsername(), loginInfo.getPassword());
        if (user != null) {
            user.setLoggedIn(true);
            userRepository.save(user);
            return loginInfo.getUsername();
        }
        return null;
    }
    
    @Override
    public java.lang.String logOut(java.lang.String username){
        User user = userRepository.findByUsername(username);
        if (user != null) {
            user.setLoggedIn(false);
            userRepository.save(user);
            return username;
        }
        return null;
    }
    
    
    
    @Override
    public java.lang.Boolean isLoggedIn(java.lang.String username) {
        return this.readUser(username).getLoggedIn();
    }
    
    
    
    @Override
    public java.lang.String getName(java.lang.String username) {
       User user = this.readUser(username);
       return user.getFirstName() + ", " + user.getLastName();
    }
    

}